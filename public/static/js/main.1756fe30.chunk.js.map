{"version":3,"sources":["components/LaunchItem.jsx","components/MissionKey.jsx","components/Launches.jsx","components/Launch.jsx","logo.png","App.jsx","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCH_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1756fe30.chunk.js","sourcesContent":["\nimport React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom';\n\nfunction LaunchItem({ launch }) {\n    const {\n        flight_number,\n        mission_name,\n        launch_date_local,\n        launch_success,\n     } = launch;\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: <span className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                    })}>{ mission_name }</span></h4>\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment> </p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LaunchItem\n","\nimport React from 'react';\n\nfunction MissionKey() {\n    return (\n        <div className=\"my-3\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n            </p>\n        </div>\n    )\n}\n\nexport default MissionKey;  \n","\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery {\n        launches {\n            flight_number,\n            mission_name,\n            launch_date_local,\n            launch_success\n        }\n    },\n`;\n\nfunction Launches() {\n    return (\n        <div>\n            <h1 className=\"display-4 my-3\">\n                Launches\n            </h1>\n            <MissionKey/>\n            <Query query={LAUNCH_QUERY}>\n                {\n                    ({ loading, error, data }) => {\n                        if(loading) return <h4>Loading...</h4>\n                        if(error) console.log(error);\n                        return (     \n                            data.launches.map(launch => {\n                                return(\n                                    <LaunchItem key={launch.flight_number} launch={launch}/>\n                                )\n                            })\n                        )\n                    }\n                }\n            </Query>\n        </div>\n    )\n}\n\nexport default Launches;\n","\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!){\n        launch(flight_number: $flight_number) {\n            flight_number,\n            mission_name,\n            launch_year,\n            launch_success,\n            launch_date_local,\n            rocket {\n                rocket_id,\n                rocket_name,\n                rocket_type\n            }\n        }\n    }\n`;\n\nfunction Launch( { match } ) {\n    let { flight_number } = match.params;\n    flight_number = parseInt(flight_number);\n    return (\n        <div>\n            <Query query={LAUNCH_QUERY} variables={{flight_number}} >\n                {\n                    ({ loading, error, data }) => {\n                        if(loading) return <h4>Loading...</h4>\n                        if(error) console.log(error);\n                        const { mission_name, launch_year, launch_success, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch;\n                        return (\n                            <div>\n                                <h1 className=\"display-4 my-3\"> <span className=\"text-dark\">Mission: </span>{ mission_name }</h1>\n                                <h4 className=\"mb-3\">Launch Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Flight Number: {flight_number}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Launch Year: {launch_year}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Launch Success: <span className={classNames({\n                                            'text-success': launch_success,\n                                            'text-danger': !launch_success\n                                        })}>{launch_success ? 'Yes': 'No'}</span> \n                                    </li>\n                                </ul>\n\n                                <h4 className=\"my-3\">Rocket Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                                </ul>\n                                <hr/>\n                                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n                            </div>\n                        )\n                    }\n                }\n            </Query>\n        </div>\n    )\n}\n\nexport default Launch\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\"\n\nimport \"./App.css\";\nimport logo from \"./logo.png\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: \"block\", margin: \"auto\" }}\n          />\n          <Route exact path=\"/\" component={Launches}/>\n          <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}